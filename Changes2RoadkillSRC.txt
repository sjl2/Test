Add to PagesController.cs



        /// <summary>
        /// Displays the Edit view in new page mode with new server template.
        /// </summary>
        /// <returns>An empty <see cref="PageViewModel"/> as the model.</returns>
        /// <remarks>This action requires editor rights.</remarks>
        [EditorRequired]
        public ActionResult NewServer(string title = "", string tags = "")
        {
            PageViewModel model = new PageViewModel()
            {
                Title = title,
                RawTags = tags,
                Content = "#Hello \n##Hello\n###Hello  \n **Bold** *italics*" // Changed
            };

            model.AllTags = _pageService.AllTags().ToList();

            return View("Edit", model);
        }

        /// <summary>
        /// Displays the Edit view in new page mode with new project template.
        /// </summary>
        /// <returns>An empty <see cref="PageViewModel"/> as the model.</returns>
        /// <remarks>This action requires editor rights.</remarks>
        [EditorRequired]
        public ActionResult NewProject(string title = "", string tags = "") // Changed
        {
            PageViewModel model = new PageViewModel()
            {
                Title = title,
                RawTags = tags,
                Content = "#Hello \n##Hello\n###Hello  \n **Bold** *italics*" // Changed
            };

            model.AllTags = _pageService.AllTags().ToList();

            return View("Edit", model);
        }

        /// <summary>
        /// Displays the Edit view in new page mode with new database template.
        /// </summary>
        /// <returns>An empty <see cref="PageViewModel"/> as the model.</returns>
        /// <remarks>This action requires editor rights.</remarks>
        [EditorRequired]
        public ActionResult NewDataBase(string title = "", string tags = "")
        {
            PageViewModel model = new PageViewModel()
            {
                Title = title,
                RawTags = tags,
                Content = "#Hello \n##Hello\n###Hello  \n **Bold** *italics*" // Changed
            };

            model.AllTags = _pageService.AllTags().ToList();

            return View("Edit", model);
        }


Core/MVC/Text/MenuParser.cs

        private static readonly string NEWSERVER_TOKEN = "%newserver%"; // Changed
        private static readonly string NEWPROJECT_TOKEN = "%newproject%"; // Changed
        private static readonly string NEWDATABASE_TOKEN = "%newdatabase%"; // Changed

	string newserver = CreateAnchorTag("/pages/newserver", "New Server"); // Changed
            string newproject = CreateAnchorTag("/pages/newproject", "New Project"); // Changed
            string newdatabase = CreateAnchorTag("/pages/newdatabase", "New Database"); // Changed

                newserver = CreateAnchorTag(urlHelper.Action("NewServer", "Pages"), "New Server"); // Changed
                newproject = CreateAnchorTag(urlHelper.Action("NewProject", "Pages"), "New Project"); // Changed
                newdatabase = CreateAnchorTag(urlHelper.Action("NewDatabase", "Pages"), "New Database"); // Changed

if (!_userContext.IsLoggedIn)
			{
				newpage = "";
                newserver = ""; // Changed
                newproject = ""; // Changed
                newdatabase = ""; // Changed
				manageFiles = "";
			}

		html = html.Replace(CATEGORIES_TOKEN, categories);
		html = html.Replace(ALLPAGES_TOKEN, allPages);
		html = html.Replace(MAINPAGE_TOKEN, mainPage);
		html = html.Replace(NEWPAGE_TOKEN, newpage);
        	    html = html.Replace(NEWSERVER_TOKEN, newserver); // Changed
            html = html.Replace(NEWPROJECT_TOKEN, newproject); // Changed
            html = html.Replace(NEWDATABASE_TOKEN, newdatabase); // Changed
			html = html.Replace(MANAGEFILES_TOKEN, manageFiles);
			html = html.Replace(SITESETTINGS_TOKEN, siteSettings);



